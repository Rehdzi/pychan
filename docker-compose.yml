version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    container_name: pychan-api
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_BUCKET=${S3_BUCKET}
    volumes:
      - .:/api
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10m
      timeout: 5s
      retries: 5
      start_period: 5s

  front:
    image: rehdzi/pychan-front
    ports:
      - "4173:4173"
    container_name: pychan-front
    depends_on:
      api:
        condition: service_healthy

  pg:
    image: postgres:15.12-alpine
    container_name: pychan-pg-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: SoundsLikeShit
      POSTGRES_DB: pychan
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pychan"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    container_name: pychan-redis-db
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

volumes:
  pg_data:
  redis_data:

